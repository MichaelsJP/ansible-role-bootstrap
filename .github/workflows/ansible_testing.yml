---
name: Ansible Role Bootstrap Build

on:
  pull_request:
    branches: [ '**' ]
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install lint dependencies
        run: |
          pip install yamllint
      - name: Install and run pre-commit
        uses: pre-commit/action@v2.0.0
        with:
          extra_args: --all-files
  molecule:
    runs-on: ubuntu-20.04
    needs:
      - lint
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      matrix:
        molecule_distro:
          - rockylinux/rockylinux:8
          - centos:7
          - centos:8
          - ubuntu:18.04
          - ubuntu:20.04
          - debian:11
          - debian:10
          - debian:9
          - fedora:34
        poetry-version: [ 1.1.4 ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Install dependencies
        run: |
          sudo apt install git
          python -m pip install --upgrade pip
          poetry install --no-dev
        working-directory: "/home/runner/work/ansible-role-bootstrap/ansible-role-bootstrap/"
      - name: Write ansible vault secret to file
        run: |
          echo $VAULT_PASS > ./passwordfile
        env:
          VAULT_PASS: ${{secrets.VAULT_PASS}}
        working-directory: "/home/runner/work/ansible-role-bootstrap/ansible-role-bootstrap/"
      - name: Test with molecule
        run: |
          poetry run molecule --version
          poetry run molecule test -s default
        env:
          MOLECULE_DISTRO: ${{ matrix.molecule_distro }}

#      - name: Molecule
#        uses: gofrolist/molecule-action@v2
#        with:
#          molecule_options: --debug --base-config molecule/node_security/molecule.yml
#          molecule_command: test
#          molecule_args: --scenario-name node_security
#          molecule_working_dir: "ansible_collections/ansible_infrastructure/"
#        env:
#          MOLECULE_DISTRO: ${{ matrix.molecule_distro }}
